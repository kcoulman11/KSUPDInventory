@model KentStatePoliceInventory.Models.InventoryViewModel

<!DOCTYPE html>
<html>

<head>
  <title>KSUPD Inventory</title>
  <link rel="stylesheet" href="Styles/Main.css">
  <script type="text/javascript" src="Scripts/jquery-3.2.1.js"></script>
  <link rel="stylesheet" href="//code.jquery.com/ui/1.12.1/themes/base/jquery-ui.css">
  <link rel="stylesheet" href="/resources/demos/style.css">
  <script src="https://code.jquery.com/jquery-1.12.4.js"></script>
  <script src="https://code.jquery.com/ui/1.12.1/jquery-ui.js"></script>
</head>

<body>
  <div class="header" style="text-align: center">
    <h2 id="head-title">View and Update Inventory</h2>
    <select id="location-select" style="width: 25%; height: 25px">
      <option value="default">Full List</option>
      @foreach(var location in Model.Locations)
      {
          <option value="@(location.LocationName)">@(location.LocationName)</option>
      }
  	</select>
  </div>
  <br>
  <table id="main-table-display">
    <tr>
      <th>Item Name</th>
      <th>Item Description</th>
      <th>Quantity</th>
      <th>Reorder Quantity</th>
      <th>Actions</th>
    </tr>
    @foreach (var item in Model.InventoryItems) {
    <tr>
      <td class="table-item" id="@(item.ItemName)-name" style="text-align: left;">@item.ItemName</td>
      <td class="table-item" id="@(item.ItemName)-description" style="text-align: left;">@item.ItemDescription</td>
      <td class="table-item" id="@(item.ItemName)-count" style="text-align: right;">@item.ItemQuantity</td>
      <td class="table-item" id="@(item.ItemName)-reorder" style="text-align: right;">@item.ItemReorder</td>
      <td>
        <button id="@(item.ItemName)-plus-one" type="button" class="inventoryButton">+1</button>
        <button id="@(item.ItemName)-minus-one" type="button" class="inventoryButton">-1</button>
        <input id="@(item.ItemName)-bulk-number" type="number" class="bulkNumber" placeholder="Bulk Update">
        <button id="@(item.ItemName)-update" type="button" class="updateButton">Update</button>
        <button id="@(item.ItemName)-issueto" type="button" class="updateButton">Issue to</button>
      </td>
    </tr>
    }
  </table>
</body>

<div id="issue-item-dialog" title="Issue Item">
      <h3>Item:</h3>
      <input type="text" id="issued-item" disabled />
      <h3>Issue to:</h3>
      <select id="new-item-location">
                @foreach(var location in Model.IssuedToList)
                {
                    <option value="@(location.LocationName)">@(location.LocationName)</option>
                }
            </select>
      <h3>Quantity to Issue:</h3>
      <input id="issue-item-quantity" type="number" min="0">

      <br><br>
      <button id="issue-item-submit" type="button">Submit</button>
</div>

</html>

<script type="text/javascript">
  var itemToIssue = "item";
  var model = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model, new Newtonsoft.Json.JsonSerializerSettings() {
    ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore
  }));

  function UpdateTable(newData){
      $("#main-table-display").find("tr:gt(0)").remove();
      newData.items.forEach(function (item) {
          var markup = "<tr><td class='table-item' id='" + item.ItemName.replace(/\s/g, '') + "-name' style='text-align: left;'>" + item.ItemName + "</td>";
          markup += "<td class='table-item' id='" + item.ItemName.replace(/\s/g, '') + "-description' style='text-align: left;'>" + item.ItemDescription + "</td>";
          markup += "<td class='table-item' id='" + item.ItemName.replace(/\s/g, '') + "-count' style='text-align: right;'>" + item.ItemQuantity + "</td>";
          markup += "<td class='table-item' id='" + item.ItemName.replace(/\s/g, '') + "-reorder' style='text-align: right;'>" + item.ItemReorder + "</td>";
          markup += "<td><button id='" + item.ItemName.replace(/\s/g, '') + "-plus-one' type='button' class='inventoryButton'>+1</button>";
          markup += "<button id='" + item.ItemName.replace(/\s/g, '') + "-minus-one' type='button' class='inventoryButton'>-1</button>";
          markup += "<input id='" + item.ItemName.replace(/\s/g, '') + "-bulk-number' type='number' class='bulkNumber' placeholder='Bulk Update'>";
          markup += "<button id='" + item.ItemName.replace(/\s/g, '') + "-update' type='button' class='updateButton'>Update</button>";
          markup += "<button id='" + item.ItemName.replace(/\s/g, '') + "-issue' type='button' class='updateButton'>Issue to</button></td>";
          $('#main-table-display').append(markup);
      });
  }

  $('#issue-item-dialog').dialog({
    autoOpen: false
  });

  $('[id*="issueto"]').click(function () {
    $('#issued-item').val($(this).closest('tr').find("[id*='name']").text());
    $('#issue-item-dialog').dialog('open');
  });

  $('#issue-item-submit').click(function () {
	var item = itemToIssue;
    $.ajax({
        dataType: "json",
	    data: {
            issuedTo: $('#new-item-location').val(),
	          quantity: parseInt($('#issue-item-quantity').val()),
            itemName: $('#issued-item').val()
	    },
	    url: '@Url.Action("IssueItem")',
	    type: 'POST',
	    success: function(result){
            alert("Successfully issued item to " + $('#new-item-location').val());
            location.reload();
            $('.ui-icon-closethick').trigger('click');
	    },
	    error: function(xhr, ajaxOptions, thrownError) {
            alert("failed to issue item");
	    }
	});
  });

  $("#table-selector").change(function() {
    $('#head-title').text($(this).val());
    $.ajax({
      dataType: "json",
      data: {
        locationName: $(this).val(),
      },
      url: '@Url.Action("LoadLocationData")',
      type: 'POST',
      success: function(result) {
        alert('Quantity Successfully Updated');
      },
      error: function(xhr, ajaxOptions, thrownError) {
        alert("FAIL. GIT GUD SON");
      }
    });
  });

    $("#location-select").change(function () {
        if ($(this).val() == "default") {
            location.reload();
        }
        $.ajax({
          dataType: "json",
          data: {
            locationName: $(this).val(),
          },
          url: '@Url.Action("LoadNewInventoryData")',
          type: 'POST',
          success: function(result) {
            UpdateTable(result);
          },
          error: function(xhr, ajaxOptions, thrownError) {
            alert("failed to load data");
          }
        });
    });

    $(document).on('click', '[id *= "plus-one"]', function () {
        var count = parseInt($(this).closest('tr').find("[id*='count']").text());
        count++;
        $(this).closest('tr').find('[id*="count"]').text(count);

        var nameToUpdate = $(this).closest('tr').first().find("[id*='name']").text();
        var updatedQuantity = $(this).closest('tr').first().find("[id*=count]").text();

        $.ajax({
          dataType: "json",
          data: {
            ItemName: nameToUpdate,
            ItemQuantity: updatedQuantity
          },
          url: '@Url.Action("UpdateQuantities")',
          type: 'POST',
          success: function(result) {
            alert('Quantity Successfully Updated');
          },
          error: function(xhr, ajaxOptions, thrownError) {
            alert("FAIL. GIT GUD SON");
          }
        });
      });

    $(document).on('click', '[id *= "minus-one"]', function () {
    if (parseInt($(this).closest('tr').find("[id*='count']").text()) < 1) {
      alert("Count cannot be less than 0");
      return;
    } else {
      count = parseInt($(this).closest('tr').find("[id*='count']").text());
      count = count - 1;
      $(this).closest('tr').find("[id*='count']").text(count);

      if (parseInt($(this).closest('tr').find("[id*='count']").text()) == parseInt($(this).closest('tr').find("[id*='reorder']").text())) {
        alert("Reorder this item soon");
      }
    }

    var nameToUpdate = $(this).closest('tr').first().find("[id*='name']").text();
    var updatedQuantity = $(this).closest('tr').first().find("[id*=count]").text();

    $.ajax({
      dataType: "json",
      data: {
        ItemName: nameToUpdate,
        ItemQuantity: updatedQuantity
      },
      url: '@Url.Action("UpdateQuantities")',
      type: 'POST',
      success: function(result) {
        alert('Quantity Successfully Updated');
      },
      error: function(xhr, ajaxOptions, thrownError) {
        alert("FAIL. GIT GUD SON");
      }
    });
  });

  $('[id*="update"]').click(function() {
    if (parseInt($(this).closest('tr').find("[id*='bulk-number']").val()) < 0) {
      alert("Count cannot be less than 0");
      return;
    } else {
      $(this).closest('tr').find("[id*='count']").text(parseInt($(this).closest('tr').find("[id*='bulk-number']").val()));
    }

    if (parseInt($(this).closest('tr').find("[id*='bulk-number']").val()) <= parseInt($(this).closest('tr').find("[id*='reorder']").text())) {
      alert("Reorder this item soon");
    }

    var nameToUpdate = $(this).closest('tr').first().find("[id*='name']").text();
    var updatedQuantity = $(this).closest('tr').first().find("[id*=count]").text();

    $.ajax({
      dataType: "json",
      data: {
        ItemName: nameToUpdate,
        ItemQuantity: updatedQuantity
      },
      url: '@Url.Action("UpdateQuantities")',
      type: 'POST',
      success: function(result) {
        alert('Quantity Successfully Updated');
      },
      error: function(xhr, ajaxOptions, thrownError) {
        alert("FAIL. GIT GUD SON");
      }
    });
  });

  $('#quantity-submit').on('click', function() {
    var objectData = {
      name: $('#Flare-name').text(),
      quantity: $('#Flare-count').text(),
      reorder: $('#Flare-reorder').text(),
      description: $('#Flare-description').text()
    };

    var objectDataString = JSON.stringify(objectData);

    $.ajax({
      dataType: "json",
      data: {
        toSave: objectDataString
      },
      url: '@Url.Action("UpdateQuantities")',
      type: 'POST',
      success: function(result) {
        $('#head-title').text("Update Successful");
      }
    });
  });
</script>
