@model KentStatePoliceInventory.Models.InventoryViewModel

<!DOCTYPE html>
<html>
  <head>
    <title>KSUPD Analytics</title>
    <link rel="stylesheet" href="~/Styles/Main.css">
    <script type="text/javascript" src="Scripts/jquery-3.2.1.js"></script>
    <script src="../../../Scripts/jquery.unobtrusive-ajax.js"></script>
</head>

      <body>
		 
        <div class="header">
          <h2 id="head-title">View Inventory</h2>
        </div>

        <div id="Table Selector">
          <select id="table-selector">
            <option value="Armory">Testing</option>
            <option value="Third-Floor">Third Floor Room</option>
            <option value="Canine">Canine Supplies</option>
            <option value="Cruisers">Cruisers</option>
          </select>
        </div>

        <!--Load Data from Selected Table into JSON or whatever-->
       
        <table id="main-table-display">
			
          <tr>
            <th>Item Name</th>
    	    <th>Item Description</th>
            <th>Quantity</th>
    		<th>Reorder Quantity</th>
            <th>Actions</th>
          </tr>
        	@foreach (var item in Model.InventoryItems)
    		{
        	  <tr>
                <td id="@(item.ItemName)-name">@item.ItemName</td>
        		<td id="@(item.ItemName)-description">@item.ItemDescription</td>
                <td id="@(item.ItemName)-count">@item.ItemQuantity</td>
        		<td id="@(item.ItemName)-reorder">@item.ItemReorder</td>
                <td><button id="@(item.ItemName)-plus-one" type="button">+1</button>
                <button id="@(item.ItemName)-minus-one" type="button">-1</button>
                <input id="@(item.ItemName)-bulk-number" type="number" placeholder="Bulk Update">
                <button id="@(item.ItemName)-update" type="button">Update</button></td>
        	  </tr>
        	}		
        </table>
		
        <input type="text" name="valueINeed">
        <button id="quantity-submit" type="submit">Save</button>
      </body>
</html>

<script type="text/javascript">
    var model = @Html.Raw(Newtonsoft.Json.JsonConvert.SerializeObject(Model, new Newtonsoft.Json.JsonSerializerSettings(){ReferenceLoopHandling = Newtonsoft.Json.ReferenceLoopHandling.Ignore}));

	
    $( "#table-selector" ).change(function() {
        $('#head-title').text($(this).val());
    });

	$('[id*="plus-one"]').click(function() {
        var count = parseInt($(this).closest('tr').find("[id*='count']").text());
        count++;
        $(this).closest('tr').find('[id*="count"]').text(count);
	
        var nameToUpdate = $(this).closest('tr').first().find("[id*='name']").text();
	    var updatedQuantity = $(this).closest('tr').first().find("[id*=count]").text();

	    $.ajax({
            dataType: "json",
            data: {
                ItemName: nameToUpdate,
                ItemQuantity: updatedQuantity 
            },
            url: '@Url.Action("UpdateQuantities")',
            type: 'POST',
            success: function (result) {
                alert('Quantity Successfully Updated');
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("FAIL. GIT GUD SON");
            }
        });
	});

	$('[id*="minus-one"]').click(function() {
	    if(parseInt($(this).closest('tr').find("[id*='count']").text()) < 1){
            alert("Count cannot be less than 0");
	    }
	    else{
            count = parseInt($(this).closest('tr').find("[id*='count']").text());
            count = count - 1;
            $(this).closest('tr').find("[id*='count']").text(count);

	        if(parseInt($(this).closest('tr').find("[id*='count']").text()) == parseInt($(this).closest('tr').find("[id*='reorder']").text())){
                alert("Reorder this item soon");
	        }
	    }

	    var nameToUpdate = $(this).closest('tr').first().find("[id*='name']").text();
        var updatedQuantity = $(this).closest('tr').first().find("[id*=count]").text();

        $.ajax({
            dataType: "json",
            data: {
                ItemName: nameToUpdate,
                ItemQuantity: updatedQuantity 
            },
            url: '@Url.Action("UpdateQuantities")',
            type: 'POST',
            success: function (result) {
                alert('Quantity Successfully Updated');
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("FAIL. GIT GUD SON");
            }
        });
    });

	$('[id*="update"]').click(function() {
	    if(parseInt($(this).closest('tr').find("[id*='bulk-number']").val()) < 0){
            alert("Count cannot be less than 0");
	    }
	    else{
            $(this).closest('tr').find("[id*='count']").text(parseInt($(this).closest('tr').find("[id*='bulk-number']").val()));
	    }

	    if(parseInt($(this).closest('tr').find("[id*='bulk-number']").val()) <= parseInt($(this).closest('tr').find("[id*='reorder']").text())){
            alert("Reorder this item soon");
	    }

	    var nameToUpdate = $(this).closest('tr').first().find("[id*='name']").text();
        var updatedQuantity = $(this).closest('tr').first().find("[id*=count]").text();

        $.ajax({
            dataType: "json",
            data: {
                ItemName: nameToUpdate,
                ItemQuantity: updatedQuantity 
            },
            url: '@Url.Action("UpdateQuantities")',
            type: 'POST',
            success: function (result) {
                alert('Quantity Successfully Updated');
            },
            error: function (xhr, ajaxOptions, thrownError) {
                alert("FAIL. GIT GUD SON");
            }
        });
	});

	$('#quantity-submit').on('click', function () {
        var objectData =
         {
             name: $('#Flare-name').text(),
             quantity: $('#Flare-count').text() , 
	         reorder: $('#Flare-reorder').text(),
             description: $('#Flare-description').text()
         };

	    var objectDataString = JSON.stringify(objectData);
	
	    $.ajax({
	    dataType: "json",
            data: {
                toSave: objectDataString
            },
        url: '@Url.Action("UpdateQuantities")',
        type: 'POST',
        success: function (result) {
             $('#head-title').text("Update Successful");
            }
        });
    });
</script>